{"version":3,"sources":["redux/dialogsPageReducer.ts","components/Users/Users.module.css","api/api.ts","components/Navbar/Navbar.tsx","utils/objectHalpers.ts","redux/usersReducer.ts","common/Paginator/Paginator.tsx","assets/images/userPhoto.png","components/Users/User.tsx","components/Users/Users.tsx","redux/usersSelectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/loginForm.tsx","components/Login/Login.tsx","redux/appReducer.ts","hoc/withSuspense.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Navbar/Navbar.module.css","assets/images/preloader.svg","common/preloader/Preloader.tsx","common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/Login/Login.module.css","redux/profilePageReducer.ts"],"names":["initialState","dialogs","id","name","img","messages","message","dialogsPageReducer","state","action","type","newMessageBody","sendMessageCreator","module","exports","instanse","axios","create","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followAPI","postFollow","post","deleteFollow","delete","authAPI","getAuth","login","email","password","rememberMe","logout","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","Navbar","className","style","nav","item","to","updateObjectInArray","items","itemId","newObjParams","map","el","users","totalUserCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","s","selectedPage","page","User","user","follow","unfollow","usersPhoto","src","photos","small","userPhoto","followed","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","onPageChangedThunkCreator","this","getUsersThunkCreator","Preloader","React","Component","connect","totalUsersCount","totalCount","bind","Header","isAuth","header","alt","loginBlock","errorMassage","setAuthUserData","payload","setErrorMassage","getAuthUserData","HeaderContainer","auth","LoginForm","formik","useFormik","initialValues","validationSchema","yup","shape","required","onSubmit","values","validations","touched","error","OnChangeHandler","e","handleChange","handleSubmit","placeholder","onChange","onBlur","handleBlur","value","errors","checked","formData","initialized","withSuspense","Suspense","fallback","DialogContainer","lazy","default","ProfileContainer","ProfilesContainer","App","initializeApp","path","render","compose","withRouter","app","reducers","combineReducers","profilePage","profilePageReducer","dialogsPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","basename","process","document","getElementById","preloader","posts","likeCount","profile","newPostText","f","addPost","setStatus","getUserProfile","putStatus"],"mappings":"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","file":"static/js/main.5c31a5e0.chunk.js","sourcesContent":["\r\n\r\n\r\nexport type initialStateType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n}\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n}\r\n\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: 'Dima',\r\n            img: 'https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Valera',\r\n            img: 'https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Sveta',\r\n            img: 'https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Tanya',\r\n            img: 'https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Anton',\r\n            img: 'https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Alexandr',\r\n            img: 'https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg'\r\n        }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'hi' },\r\n        { id: 2, message: 'how a u?' },\r\n        { id: 3, message: 'yo' },\r\n    ],\r\n}\r\nexport const dialogsPageReducer = (state = initialState, action: DialogsActionsTypes):initialStateType => {\r\n    switch (action.type) {\r\n        case \"SEND-MESSAGE\":\r\n            return {...state,messages:[...state.messages,{id: 7, message: action.newMessageBody}]}\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport type DialogsActionsTypes = sendMessageCreatorType\r\n\r\n\r\ntype sendMessageCreatorType = ReturnType<typeof sendMessageCreator>\r\nexport const sendMessageCreator = (newMessageBody:string)=>{\r\n    return{\r\n        type: 'SEND-MESSAGE',newMessageBody\r\n    } as const\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__3PbSp\"};","import axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"d7bfc3c8-2c2d-429a-afe3-69f3367ec679\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    postFollow(id: number) {\r\n        return instanse.post(`follow/${id}`, {}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    deleteFollow(id: number) {\r\n        return instanse.delete(`follow/${id}`).then(\r\n            response => {\r\n                return response.data\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instanse.get('auth/me')\r\n    },\r\n    login(email:string,password:string,rememberMe:boolean=false){\r\n        return instanse.post('/auth/login',{email,password,rememberMe})\r\n    },\r\n    logout(){\r\n        return instanse.delete('/auth/login')\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number){\r\n       return instanse.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: number){\r\n        return instanse.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status:string){\r\n        return instanse.put('profile/status',{status:status})\r\n    }\r\n}\r\n\r\n","import style from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport function Navbar(){\r\n    return(\r\n        <nav className={style.nav}>\r\n\r\n            <div className={style.item}>\r\n                <NavLink to = '/profile'>Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to = '/dialogs'>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to = '/users'>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>News</div>\r\n            <div className={style.item}>Music</div>\r\n            <div className={style.item}>Settings</div>\r\n\r\n\r\n        </nav>\r\n    )\r\n}","import {UserType} from \"../redux/usersReducer\";\r\n\r\nexport const updateObjectInArray = (items:Array<UserType>, itemId:number, newObjParams:{})=>{\r\n    return items.map(el => el.id === itemId ? {...el, ...newObjParams} : {...el})\r\n}","import {followAPI, usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/objectHalpers\";\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string | null\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    status: string | null\r\n    followed: boolean\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: UsersActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            return {...state, users: updateObjectInArray(state.users,action.userId,{followed: true})}\r\n                //state.users.map(el => el.id === action.userId ? {...el, followed: true} : {...el})}\r\n        }\r\n        case 'UNFOLLOW': {\r\n            return {...state, users: updateObjectInArray(state.users,action.userId,{followed: false})}\r\n        }\r\n        case 'SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUserCount: action.totalUsersCount}\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case \"TOGGLE_FOLLOWING_IN_PROGRESS\": {\r\n            return action.isFetching ? {...state, followingInProgress: [...state.followingInProgress, action.userId]}\r\n                : {...state, followingInProgress: state.followingInProgress.filter(el => el !== action.userId)}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type UsersActionsTypes =\r\n    followSuccessType\r\n    | unfollowSuccessType\r\n    | setUsersType\r\n    | setCurrentPageType\r\n    | setTotalUsersCountType\r\n    |\r\n    toggleIsFetchingType\r\n    | toggleFollowingInProgressType\r\n\r\ntype followSuccessType = ReturnType<typeof followSuccess>\r\nexport const followSuccess = (userId: number) => {\r\n    return {\r\n        type: 'FOLLOW', userId\r\n    } as const\r\n}\r\n\r\n// type ActionCommonType = ReturnType<typeof addPostActionCreator> |  ReturnType<typeof updateNewPostTextActionCreator>\r\ntype unfollowSuccessType = ReturnType<typeof unfollowSuccess>\r\nexport const unfollowSuccess = (userId: number) => {\r\n    return {\r\n        type: 'UNFOLLOW', userId\r\n    } as const\r\n}\r\n\r\ntype setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {\r\n        type: 'SET_USERS', users\r\n    } as const\r\n}\r\n\r\ntype setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: 'SET_CURRENT_PAGE', currentPage\r\n    } as const\r\n}\r\n\r\ntype setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n    return {\r\n        type: 'SET_TOTAL_USERS_COUNT', totalUsersCount\r\n    } as const\r\n}\r\ntype toggleIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: 'TOGGLE_IS_FETCHING', isFetching\r\n    } as const\r\n}\r\n\r\ntype toggleFollowingInProgressType = ReturnType<typeof toggleFollowingInProgress>\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: 'TOGGLE_FOLLOWING_IN_PROGRESS', isFetching, userId\r\n    } as const\r\n}\r\n\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let response = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(response.items))\r\n        dispatch(setTotalUsersCount(response.totalCount))\r\n    }\r\n}\r\n\r\nexport const onPageChangedThunkCreator = (pageNumber: number, pageSize: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(pageNumber))\r\n        let response = await usersAPI.getUsers(pageNumber, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(response.items))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number,\r\n                                  apiMethod:(id:number)=>any, actionCreator:(userId: number)=>{type:string,userId:number}) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId))\r\n}\r\n\r\nexport const unfollow =  (userId: number) => {\r\n    return async(dispatch: Dispatch) => {\r\n        followUnfollowFlow(dispatch,userId,followAPI.deleteFollow.bind(followAPI),unfollowSuccess)\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        followUnfollowFlow(dispatch,userId,followAPI.postFollow.bind(followAPI),followSuccess)\r\n    }\r\n}","import s from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?:number\r\n}\r\n\r\nexport const Paginator = ({totalItemsCount,pageSize,currentPage,onPageChanged,portionSize =10,...props}: PropsType) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const portionCount = Math.ceil(pagesCount/portionSize)\r\n    const [portionNumber,setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber-1)*portionSize+1\r\n    const rightPortionPageNumber = portionNumber*portionSize\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber>1 &&\r\n            <button onClick={()=>setPortionNumber(portionNumber-1)}>Back</button>}\r\n                {pages.filter(p=> p>=leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                    .map(el => {\r\n                    return <span onClick={() => onPageChanged(el)}\r\n                                 className={`${currentPage === el ? s.selectedPage : ''} ${s.page}`}>\r\n                        {el}\r\n                    </span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={()=>setPortionNumber(portionNumber+1)}>Next</button>}\r\n\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/userPhoto.945a70a0.png\";","import s from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/userPhoto.png\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    unfollowSuccess: (userId: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const User = ({user, unfollowSuccess, followingInProgress, follow, unfollow, ...props}: PropsType) => {\r\n\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img className={s.usersPhoto}\r\n                                 src={user.photos.small === null ? userPhoto : user.photos.small}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed ?\r\n                            <button disabled={followingInProgress.some(s => s === user.id)}\r\n                                    onClick={() => unfollow(user.id)}\r\n                            >Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(s => s === user.id)}\r\n                                      onClick={() => follow(user.id)\r\n                                      }>Follow</button>}\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>\r\n                            {user.name}\r\n                        </div>\r\n                        <div>\r\n                            {user.status}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>\r\n                            {'Russia'}\r\n                        </div>\r\n                        <div>\r\n                            {'City'}\r\n                        </div>\r\n                    </span>\r\n                </span>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {Paginator} from \"../../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype PropsType = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: Array<UserType>\r\n    onPageChanged: (pageNumber: number) => void\r\n    unfollowSuccess: (userId: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const Users = (props: PropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUserCount}\r\n                       pageSize={props.pageSize}\r\n                       currentPage={props.currentPage}\r\n                       onPageChanged={props.onPageChanged}/>\r\n            {props.users.map(el => <User key={el.id}\r\n                                         user={el}\r\n                                         unfollowSuccess={props.unfollowSuccess}\r\n                                         followingInProgress={props.followingInProgress}\r\n                                         follow={props.follow}\r\n                                         unfollow={props.unfollow}/>\r\n            )}\r\n        </div>\r\n    )\r\n}","import {RootStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUserSelector = (state:RootStateType)=>{\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUserSelector,(users)=>{\r\n    return users.filter(el=>true)\r\n})\r\n\r\nexport const getPageSize = (state:RootStateType) =>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUserCount = (state:RootStateType) =>{\r\n    return state.usersPage.totalUserCount\r\n}\r\nexport const getCurrentPage = (state:RootStateType) =>{\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state:RootStateType) =>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state:RootStateType) =>{\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    followSuccess, getUsersThunkCreator, onPageChangedThunkCreator,\r\n    toggleFollowingInProgress,\r\n    unfollowSuccess,follow,unfollow,\r\n    UserType\r\n} from \"../../redux/usersReducer\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/usersSelectors\";\r\n\r\n\r\ntype UsersPresentType = {\r\n    users: Array<UserType>\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    followSuccess: (userId: number) => void\r\n    unfollowSuccess: (userId: number) => void\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: number) => void\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    onPageChangedThunkCreator: (pageNumber: number, pageSize: number) => void\r\n    follow:(userId:number) => void\r\n    unfollow:(userId:number) => void\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersPresentType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n\r\n        this.props.onPageChangedThunkCreator(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUserCount={this.props.totalUserCount}\r\n                   pageSize={this.props.pageSize}\r\n                   users={this.props.users}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   unfollowSuccess={this.props.unfollowSuccess}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   follow = {this.props.follow}\r\n                   unfollow = {this.props.unfollow}\r\n            />\r\n        </>\r\n\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state: RootStoreType) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUserCount: state.usersPage.totalUserCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    followSuccess, unfollowSuccess,\r\n    toggleFollowingInProgress,\r\n    getUsersThunkCreator, onPageChangedThunkCreator,follow,unfollow\r\n})(UsersContainer)","import { NavLink } from 'react-router-dom'\r\nimport style from './Header.module.css'\r\n\r\ntype HeaderType = {\r\n    login:string | null\r\n    isAuth:boolean\r\n    logout:()=>void\r\n}\r\n\r\nexport function Header({login,isAuth,logout}:HeaderType){\r\n    return(\r\n        <header className={style.header}>\r\n            <img src=\"https://cdn.pixabay.com/photo/2015/12/29/19/46/cat-1113335_960_720.png\" alt=\"logo\"/>\r\n            <div className={style.loginBlock}>\r\n                {isAuth\r\n                    ? <div>{login} - <button onClick={logout}>Log out</button></div>\r\n                    :<NavLink to = {'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppActionType, AppThunk, RootStateType} from \"./redux-store\";\r\n\r\ntype InitialStateType = {\r\n    userId: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n    errorMassage: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    errorMassage: ''\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: AuthActionsType) => {\r\n    switch (action.type) {\r\n        case \"AUTH/SET_USER_DATA\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case \"AUTH/LOGIN_SUCCESS\": {\r\n            return {...state, errorMassage: action.errorMassage}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport type AuthActionsType = SetAuthUserDataType | SetErrorMassageType\r\nexport type SetAuthUserDataType = ReturnType<typeof setAuthUserData>\r\nconst setAuthUserData = (userId: string | null, email: string | null, login: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: 'AUTH/SET_USER_DATA',\r\n        payload: {userId: userId, email, login, isAuth}\r\n    } as const\r\n}\r\n\r\nexport type SetErrorMassageType = ReturnType<typeof setErrorMassage>\r\nexport const setErrorMassage = (errorMassage: string) => {\r\n    return {type: 'AUTH/LOGIN_SUCCESS', errorMassage} as const\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch<AuthActionsType>) => {\r\n    let response = await authAPI.getAuth()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunk => async dispatch => {\r\n    try {\r\n        const response = await authAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            dispatch(setErrorMassage(response.data.messages[0]))\r\n        }\r\n    } catch (e) {\r\n        //throw new Error(e)\r\n    }\r\n}\r\n\r\nexport const logout = (): AppThunk => async (dispatch) => {\r\n    let response =  await authAPI.logout()\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n}\r\n\r\n// export const login = (email: string, password: string, rememberMe: boolean): AppThunk => {\r\n//     return (dispatch) => {\r\n//         authAPI.login(email, password, rememberMe)\r\n//             .then((res) => {\r\n//                 if (res.data.resultCode === 0) {\r\n//                     dispatch(getAuthUserData())\r\n//                 }\r\n//             })\r\n//     }\r\n// }","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/authReducer\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\n\r\n\r\ntype mapStateToProps = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype mapDispatchPropsType = {\r\n    logout:()=>void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<mapStateToProps & mapDispatchPropsType> {\r\n\r\n\r\n    render() {\r\n        return <Header login={this.props.login}\r\n                       isAuth={this.props.isAuth}\r\n                       logout={this.props.logout}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import {useFormik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport style from \"./Login.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\nexport type LoginDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\ntype LoginFormType = {\r\n    errorMassage: string\r\n    setErrorMassage:(errorMassage:string)=>void\r\n    onSubmit: (formData:LoginDataType)=>void\r\n}\r\n\r\nexport const LoginForm = (props:LoginFormType) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '', password: '', rememberMe: false\r\n        },\r\n        validationSchema: yup.object().shape({\r\n            email: yup.string().required('Required').email('incorrectly filled email'),\r\n            password: yup.string().required('Required')\r\n        }),\r\n        onSubmit: values => {\r\n            props.onSubmit(values)\r\n        },\r\n    });\r\n    const validations = (touched: boolean | undefined, error: string | undefined) => {\r\n        return touched && error ? <div className={style.error}>{error}</div> : null\r\n    }\r\n    const OnChangeHandler = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        formik.handleChange(e)\r\n        props.setErrorMassage('')\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <input\r\n                    placeholder=\"login\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onChange={OnChangeHandler}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.email}/>\r\n                {validations(formik.touched.email, formik.errors.email)}\r\n            </div>\r\n\r\n            <div>\r\n                <input\r\n                    placeholder=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onBlur={formik.handleBlur}\r\n                    onChange={OnChangeHandler}\r\n                    value={formik.values.password}/>\r\n                {validations(formik.touched.password, formik.errors.password)}\r\n            </div>\r\n\r\n            <div>\r\n                <input\r\n                    id=\"rememberMe\"\r\n                    name=\"rememberMe\"\r\n                    type=\"checkbox\"\r\n                    onChange={formik.handleChange}\r\n                    checked={formik.values.rememberMe}\r\n                />\r\n                <label>remember me</label>\r\n            </div>\r\n            {props.errorMassage && <div className={style.error}>{props.errorMassage}</div>}\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    )\r\n}","import React from \"react\";\r\nimport {LoginDataType, LoginForm} from \"./loginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login,setErrorMassage} from \"../../redux/authReducer\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\ntype LoginType = {\r\n    isAuth: boolean\r\n    errorMassage: string\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n    setErrorMassage:(errorMassage:string)=>void\r\n}\r\n\r\nconst Login = (props: LoginType) => {\r\n    const onSubmit = (formData: LoginDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginForm errorMassage={props.errorMassage}\r\n                       setErrorMassage = {props.setErrorMassage}\r\n                       onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        errorMassage: state.auth.errorMassage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps ,{login,setErrorMassage})(Login)\r\n\r\n","import {AuthActionsType, getAuthUserData} from \"./authReducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {Dispatch} from \"redux\";\r\nimport {RootStateType} from \"./redux-store\";\r\n\r\ntype InitialStateType = {\r\n    initialized:boolean\r\n}\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state:InitialStateType = initialState,action:appReducerActionType):InitialStateType =>{\r\n        switch (action.type) {\r\n            case 'INITIALIZED_SUCCESS':{\r\n                return {...state,initialized:true}\r\n            }\r\n            default: return state\r\n\r\n        }\r\n}\r\ntype appReducerActionType = ReturnType<typeof initializedSuccess>|AuthActionsType\r\nexport const initializedSuccess = ()=>({type:'INITIALIZED_SUCCESS'}) as const\r\n\r\nexport const initializeApp = (): ThunkAction<void, RootStateType, unknown, appReducerActionType> => async (dispatch) => {\r\n    await dispatch(getAuthUserData())\r\n    dispatch(initializedSuccess())\r\n\r\n\r\n}","import React from \"react\";\r\n\r\nexport const withSuspense = (Component: any) => {\r\n    return (props:any) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component{...props}/>\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\n// import {DialogContainer} from \"./components/Dialogs/DialogsContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport {Preloader} from \"./common/preloader/Preloader\";\r\nimport {RootStateType} from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogContainer = React.lazy(() =>\r\n    import('./components/Dialogs/DialogsContainer')\r\n        .then(({DialogContainer}) => ({default: DialogContainer})),\r\n);\r\nconst ProfileContainer = React.lazy(() =>\r\n    import('./components/Profile/ProfileContainer')\r\n        .then(({ProfilesContainer}) => ({default: ProfilesContainer})),\r\n);\r\n\r\n\r\n//jsx-> (bable in JS and for component create)React.createElement\r\ntype mapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\ntype mapDispatchPropsType = {\r\n    initializeApp: () => void\r\n}\r\ntype ownPropsType = mapStateToPropsType & mapDispatchPropsType\r\n\r\nclass App extends React.Component<ownPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Switch>\r\n                        <Route path={\"/profile/:userId?\"}\r\n                               render={withSuspense(ProfileContainer)}/>\r\n                        <Route path={\"/dialogs\"}\r\n                               render={withSuspense(DialogContainer)}/>\r\n                        <Route path={\"/users\"} render={() => <UsersContainer/>}/>\r\n                        <Route path={\"/login\"} render={() => <Login/>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App)","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileActionsTypes, profilePageReducer} from \"./profilePageReducer\";\r\nimport {DialogsActionsTypes, dialogsPageReducer} from \"./dialogsPageReducer\";\r\nimport {UsersActionsTypes, usersReducer} from \"./usersReducer\";\r\nimport {AuthActionsType, authReducer} from \"./authReducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    usersPage: usersReducer,\r\n    auth:authReducer,\r\n    app:appReducer\r\n\r\n})\r\nexport  type AppActionType = AuthActionsType\r\n    | DialogsActionsTypes\r\n    | ProfileActionsTypes\r\n    | UsersActionsTypes\r\n\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootStateType, unknown, AppActionType>\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\nexport type RootStateType = ReturnType<typeof reducers>\r\nexport type StoreType = typeof store\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\n\r\n    ReactDOM.render(\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>,\r\n        document.getElementById('root')\r\n    );\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1zfMP\",\"item\":\"Navbar_item__3OH--\"};","export default __webpack_public_path__ + \"static/media/preloader.7528a770.svg\";","import preloader from \"../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nexport const Preloader = () =>{\r\n    return <img src={preloader}/>\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__24GDK\",\"page\":\"Paginator_page__51sgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3nQc8\",\"loginBlock\":\"Header_loginBlock__Uhizl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__z7idp\"};","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nexport type InitialStateType = {\r\n    posts: Array<PostsType>\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport type ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how a u?', likeCount: 12},\r\n        {id: 2, message: \"It\\'s my first post\", likeCount: 10}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nexport const profilePageReducer = (state = initialState, action: ProfileActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-POST\":\r\n            return {\r\n                ...state,\r\n                posts: [{id: 3, message: action.newPostText, likeCount: 0}, ...state.posts,]\r\n            }\r\n        case \"SET_USER_PROFILE\":\r\n            return {...state, profile: action.profile}\r\n        case \"SET_STATUS\":\r\n            return {...state, status: action.status}\r\n        case \"DELETE-POST\":\r\n            return {...state, posts: state.posts.filter(f => f.id !== action.id)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type ProfileActionsTypes =\r\n    | AddPostType\r\n    | DeletePostType\r\n    | SetUserProfileType\r\n    | SetStatusType\r\n// type AddPostActionCreatorType = {\r\n//     type: 'ADD-POST'\r\n// }\r\ntype AddPostType = ReturnType<typeof addPost>\r\nexport const addPost = (newPostText: string) => {\r\n    return {\r\n        type: 'ADD-POST', newPostText\r\n    } as const\r\n}\r\n\r\ntype DeletePostType = ReturnType<typeof deletePost>\r\nexport const deletePost = (postId: number) => {\r\n    return {\r\n        type: 'DELETE-POST', id: postId\r\n    } as const\r\n}\r\n\r\ntype SetUserProfileType = ReturnType<typeof setUserProfile>\r\nconst setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: 'SET_USER_PROFILE', profile\r\n    } as const\r\n}\r\n\r\ntype SetStatusType = ReturnType<typeof setStatus>\r\nconst setStatus = (status: string) => {\r\n    return {\r\n        type: 'SET_STATUS', status\r\n    } as const\r\n}\r\n\r\nexport const getUserProfile = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let response = await profileAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data))\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n\r\n}\r\nexport const putStatus = (status: string) => (dispatch: Dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}\r\n"],"sourceRoot":""}